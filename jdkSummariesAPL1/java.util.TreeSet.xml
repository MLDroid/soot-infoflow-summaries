<?xml version="1.0" ?><methods><method id="&lt;java.util.TreeSet: boolean addAll(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: boolean remove(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: void clear()&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: boolean add(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: java.util.NavigableSet descendingSet()&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: void &lt;init&gt;()&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: void &lt;init&gt;(java.util.Comparator)&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: void &lt;init&gt;(java.util.SortedSet)&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: java.util.SortedSet headSet(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: int size()&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: boolean isEmpty()&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: java.lang.Object pollFirst()&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: void writeObject(java.io.ObjectOutputStream)&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: java.lang.Object clone()&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$DescendingSubMap: java.util.Comparator reverseComparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: java.util.NavigableSet headSet(java.lang.Object,boolean)&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: java.util.SortedSet tailSet(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: java.util.NavigableSet tailSet(java.lang.Object,boolean)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: java.lang.Object pollLast()&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: java.util.Iterator descendingIterator()&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean)&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="2"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="3"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: java.util.Comparator comparator()&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$DescendingSubMap: java.util.Comparator reverseComparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.TreeSet: void &lt;init&gt;(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.TreeSet: java.util.Iterator iterator()&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.NavigableMap descendingMapView&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.Comparator comparator&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.util.TreeMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object lo&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean fromStart&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean toEnd&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.lang.Object fenceKey&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.NavigableMap descendingMap&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int size&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$KeyIterator: java.util.TreeMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: java.util.TreeMap$Entry root&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean loInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: int expectedModCount&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: java.lang.Object hi&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap: int modCount&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.TreeSet: java.util.NavigableMap m&gt;&lt;java.util.TreeMap$NavigableSubMap: boolean hiInclusive&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.TreeMap$NavigableSubMap this$0&gt;" TaintSubField="true"></to></flow></flows></method></methods>