<?xml version="1.0" ?><methods><method id="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node tail&gt;&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Itr: java.lang.Object nextItem&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node head&gt;&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.util.concurrent.ConcurrentLinkedQueue$Node next&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Itr: java.util.concurrent.ConcurrentLinkedQueue$Node lastRet&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node head&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Itr: java.util.concurrent.ConcurrentLinkedQueue$Node lastRet&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node head&gt;&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.util.concurrent.ConcurrentLinkedQueue$Node next&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Itr: java.util.concurrent.ConcurrentLinkedQueue$Node nextNode&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node head&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Itr: java.util.concurrent.ConcurrentLinkedQueue$Node nextNode&gt;" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Itr: java.util.concurrent.ConcurrentLinkedQueue this$0&gt;" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node head&gt;&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node first()&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node head&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node head&gt;&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.util.concurrent.ConcurrentLinkedQueue$Node next&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object peek()&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node head&gt;&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean casHead(java.util.concurrent.ConcurrentLinkedQueue$Node,java.util.concurrent.ConcurrentLinkedQueue$Node)&gt;"><flows><flow><from sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" ParameterIndex="0"></from><to sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.util.concurrent.ConcurrentLinkedQueue$Node next&gt;" ParameterIndex="1" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" ParameterIndex="0"></from><to sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" ParameterIndex="1" TaintSubField="false"></to></flow><flow><from sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" ParameterIndex="0"></from><to sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.util.concurrent.ConcurrentLinkedQueue$Node next&gt;" ParameterIndex="0" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" ParameterIndex="0"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node head&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object[] toArray(java.lang.Object[])&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentLinkedQueue: void updateHead(java.util.concurrent.ConcurrentLinkedQueue$Node,java.util.concurrent.ConcurrentLinkedQueue$Node)&gt;"><flows><flow><from sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" ParameterIndex="0"></from><to sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.util.concurrent.ConcurrentLinkedQueue$Node next&gt;" ParameterIndex="0" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" ParameterIndex="0"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node head&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" ParameterIndex="0"></from><to sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.util.concurrent.ConcurrentLinkedQueue$Node next&gt;" ParameterIndex="1" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" ParameterIndex="0"></from><to sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" ParameterIndex="1" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node succ(java.util.concurrent.ConcurrentLinkedQueue$Node)&gt;"><flows><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node head&gt;&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.util.concurrent.ConcurrentLinkedQueue$Node next&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" ParameterIndex="0"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node head&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.util.concurrent.ConcurrentLinkedQueue$Node next&gt;" ParameterIndex="0"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" ParameterIndex="0"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item&gt;" ParameterIndex="0"></from><to sourceSinkType="Parameter" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue$Node: java.util.concurrent.ConcurrentLinkedQueue$Node next&gt;" ParameterIndex="0" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node head&gt;" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method></methods>