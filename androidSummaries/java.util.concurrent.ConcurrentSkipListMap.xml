<?xml version="1.0" ?><methods><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doGet(java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)&gt;"><flows><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object lo&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="boolean" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean loInclusive&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableSet navigableKeySet()&gt;"><flows><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$KeySet: java.util.concurrent.ConcurrentNavigableMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$KeySet keySet&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: void &lt;init&gt;(java.util.SortedMap)&gt;"><flows><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.Set keySet()&gt;"><flows><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$KeySet keySet&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$KeySet: java.util.concurrent.ConcurrentNavigableMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomLevel()&gt;"><flows><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)&gt;"><flows><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object hi&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object lo&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap subMap(java.lang.Object,java.lang.Object)&gt;"><flows><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object hi&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object lo&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.lang.Object lowerKey(java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.lang.Object remove(java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.lang.Comparable comparable(java.lang.Object)&gt;"><flows><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.Comparator comparator&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$ComparableUsingComparator: java.util.Comparator 'cmp'&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$ComparableUsingComparator: java.lang.Object actualKey&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.lang.Object floorKey(java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.Collection values()&gt;"><flows><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$Values values&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Values: java.util.concurrent.ConcurrentNavigableMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap descendingMap()&gt;"><flows><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap descendingMap&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.lang.Object ceilingKey(java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.Comparator comparator()&gt;"><flows><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.Comparator comparator&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.SortedMap tailMap(java.lang.Object)&gt;"><flows><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object lo&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap headMap(java.lang.Object,boolean)&gt;"><flows><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="boolean" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean hiInclusive&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object hi&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.lang.Object replace(java.lang.Object,java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap tailMap(java.lang.Object,boolean)&gt;"><flows><flow><from ParameterType="boolean" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean loInclusive&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object lo&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableMap headMap(java.lang.Object,boolean)&gt;"><flows><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object hi&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="boolean" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean hiInclusive&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.Iterator keyIterator()&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Iter: java.util.concurrent.ConcurrentSkipListMap this$0&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Iter: java.util.concurrent.ConcurrentSkipListMap$Node next&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Iter: java.lang.Object nextValue&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$KeyIterator: java.util.concurrent.ConcurrentSkipListMap this$0&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Iter: java.util.concurrent.ConcurrentSkipListMap this$0&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$KeyIterator: java.util.concurrent.ConcurrentSkipListMap this$0&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.Iterator entryIterator()&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Iter: java.lang.Object nextValue&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Iter: java.util.concurrent.ConcurrentSkipListMap$Node next&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Iter: java.util.concurrent.ConcurrentSkipListMap this$0&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$EntryIterator: java.util.concurrent.ConcurrentSkipListMap this$0&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$EntryIterator: java.util.concurrent.ConcurrentSkipListMap this$0&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Iter: java.util.concurrent.ConcurrentSkipListMap this$0&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.lang.Object get(java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: boolean inOpenRange(java.lang.Object,java.lang.Object,java.lang.Object)&gt;"><flows><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to ParameterType="java.lang.Object" ParameterIndex="2" sourceSinkType="Parameter" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="2" sourceSinkType="Parameter"></from><to ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$EntrySet: java.util.concurrent.ConcurrentNavigableMap m&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$EntrySet entrySet&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$EntrySet: java.util.concurrent.ConcurrentNavigableMap m&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$EntrySet entrySet&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$EntrySet: java.util.concurrent.ConcurrentNavigableMap m&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$EntrySet entrySet&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: boolean inHalfOpenRange(java.lang.Object,java.lang.Object,java.lang.Object)&gt;"><flows><flow><from ParameterType="java.lang.Object" ParameterIndex="2" sourceSinkType="Parameter"></from><to ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to ParameterType="java.lang.Object" ParameterIndex="2" sourceSinkType="Parameter" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)&gt;"><flows><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object lo&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="2" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object hi&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="boolean" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean loInclusive&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="boolean" ParameterIndex="3" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean hiInclusive&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.lang.Object higherKey(java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.SortedMap headMap(java.lang.Object)&gt;"><flows><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object hi&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doPut(java.lang.Object,java.lang.Object,boolean)&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableSet keySet()&gt;"><flows><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$KeySet keySet&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$KeySet: java.util.concurrent.ConcurrentNavigableMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap headMap(java.lang.Object)&gt;"><flows><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object hi&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.lang.Object firstKey()&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)&gt;"><flows><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter" TaintSubField="false"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;"><flows><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="1" sourceSinkType="Parameter"></from><to ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.lang.Object lastKey()&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.Set entrySet()&gt;"><flows><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$EntrySet: java.util.concurrent.ConcurrentNavigableMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$EntrySet entrySet&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: void &lt;init&gt;(java.util.Comparator)&gt;"><flows><flow><from ParameterType="java.util.Comparator" ParameterIndex="0" sourceSinkType="Parameter"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.Comparator comparator&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.Iterator valueIterator()&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$ValueIterator: java.util.concurrent.ConcurrentSkipListMap this$0&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Iter: java.util.concurrent.ConcurrentSkipListMap this$0&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Iter: java.util.concurrent.ConcurrentSkipListMap$Node next&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$ValueIterator: java.util.concurrent.ConcurrentSkipListMap this$0&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Iter: java.util.concurrent.ConcurrentSkipListMap this$0&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Iter: java.lang.Object nextValue&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)&gt;"><flows><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="boolean" ParameterIndex="3" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean hiInclusive&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="2" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object hi&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object lo&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="boolean" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean loInclusive&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: void buildFromSorted(java.util.SortedMap)&gt;"><flows><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableSet descendingKeySet()&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap$KeySet keySetView&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap descendingMap&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap descendingMap&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$KeySet: java.util.concurrent.ConcurrentNavigableMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$KeySet: java.util.concurrent.ConcurrentNavigableMap m&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: void readObject(java.io.ObjectInputStream)&gt;"><flows><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: void &lt;init&gt;(java.util.Map)&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: int randomSeed&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.HashMap: java.util.Set entrySet&gt;" ParameterType="java.util.Map" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.HashMap: java.util.HashMap$HashMapEntry entryForNullKey&gt;" ParameterType="java.util.Map" ParameterIndex="0" sourceSinkType="Parameter" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.HashMap: java.util.HashMap$HashMapEntry entryForNullKey&gt;" ParameterType="java.util.Map" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.HashMap: java.util.HashMap$HashMapEntry[] table&gt;" ParameterType="java.util.Map" ParameterIndex="0" sourceSinkType="Parameter" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.HashMap: java.util.HashMap$HashMapEntry[] table&gt;" ParameterType="java.util.Map" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.HashMap: java.util.HashMap$HashMapEntry entryForNullKey&gt;" ParameterType="java.util.Map" ParameterIndex="0" sourceSinkType="Parameter" TaintSubField="true"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.HashMap: java.util.Set entrySet&gt;" ParameterType="java.util.Map" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.HashMap: java.util.HashMap$HashMapEntry[] table&gt;" ParameterType="java.util.Map" ParameterIndex="0" sourceSinkType="Parameter" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$HeadIndex head&gt;" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterType="java.util.Map" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.HashMap: java.util.Set entrySet&gt;" ParameterType="java.util.Map" ParameterIndex="0" sourceSinkType="Parameter" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap tailMap(java.lang.Object)&gt;"><flows><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterType="java.lang.Object" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object lo&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableMap descendingMap()&gt;"><flows><flow><from FieldSig="THIS" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap m&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="&lt;java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap descendingMap&gt;" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method></methods>