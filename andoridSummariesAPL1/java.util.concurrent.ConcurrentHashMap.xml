<?xml version="1.0" ?><methods><method id="&lt;java.util.concurrent.ConcurrentHashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: java.util.Collection values()&gt;"><flows><flow><from sourceSinkType="Field" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap$Values: java.util.concurrent.ConcurrentHashMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: java.util.Collection values&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment segmentAt(java.util.concurrent.ConcurrentHashMap$Segment[],int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$HashEntry entryForHash(java.util.concurrent.ConcurrentHashMap$Segment,int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: void &lt;init&gt;(int,float,int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: int segmentShift&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: int segmentMask&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="2"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: int segmentShift&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: int segmentMask&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="2"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: int segmentShift&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="2"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: int segmentMask&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$HashEntry entryAt(java.util.concurrent.ConcurrentHashMap$HashEntry[],int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: boolean contains(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: void &lt;init&gt;(int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: int segmentShift&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: int segmentMask&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: java.util.Set keySet()&gt;"><flows><flow><from sourceSinkType="Field" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap$KeySet: java.util.concurrent.ConcurrentHashMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: java.util.Set keySet&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: java.util.Enumeration keys()&gt;"><flows><flow><from sourceSinkType="Field" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap$KeyIterator: java.util.concurrent.ConcurrentHashMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap$HashIterator: java.util.concurrent.ConcurrentHashMap this$0&gt;" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: void &lt;init&gt;(int,float)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: int segmentShift&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: int segmentMask&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: int segmentMask&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: int segmentShift&gt;" FieldSig="(this)" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()&gt;"><flows><flow><from sourceSinkType="Field" FieldSig="(this)"></from><to sourceSinkType="Field" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet&gt;" FieldSig="(this)" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap$EntrySet: java.util.concurrent.ConcurrentHashMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" FieldSig="(this)"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: java.util.Enumeration elements()&gt;"><flows><flow><from sourceSinkType="Field" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap$HashIterator: java.util.concurrent.ConcurrentHashMap this$0&gt;" TaintSubField="true"></to></flow><flow><from sourceSinkType="Field" FieldSig="(this)"></from><to sourceSinkType="Return" AccesPath="&lt;java.util.concurrent.ConcurrentHashMap$ValueIterator: java.util.concurrent.ConcurrentHashMap this$0&gt;" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0"></from><to sourceSinkType="Return" TaintSubField="true"></to></flow></flows></method></methods>