<?xml version="1.0" ?><methods><method id="&lt;java.util.PriorityQueue: void initFromCollection(java.util.Collection)&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void siftUpComparable(int,java.lang.Object)&gt;"><flows><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void readObject(java.io.ObjectInputStream)&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: boolean offer(java.lang.Object)&gt;"><flows><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void &lt;init&gt;(java.util.Collection)&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: java.util.Comparator comparator()&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void siftDownUsingComparator(int,java.lang.Object)&gt;"><flows><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: boolean removeEq(java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void siftDownComparable(int,java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void heapify()&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: boolean remove(java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: boolean add(java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void siftUpUsingComparator(int,java.lang.Object)&gt;"><flows><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: java.lang.Object poll()&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: java.lang.Object[] toArray()&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void initElementsFromCollection(java.util.Collection)&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void &lt;init&gt;(java.util.PriorityQueue)&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: java.lang.Object peek()&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void &lt;init&gt;(int,java.util.Comparator)&gt;"><flows><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: int indexOf(java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: java.util.Iterator iterator()&gt;"><flows><flow><from FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue$Itr: java.util.PriorityQueue this$0&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: int modCount&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue$Itr: int expectedModCount&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void &lt;init&gt;()&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: java.lang.Object removeAt(int)&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void siftUp(int,java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void initFromPriorityQueue(java.util.PriorityQueue)&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: java.lang.Object[] toArray(java.lang.Object[])&gt;"><flows><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to ParameterIndex="0" sourceSinkType="Parameter" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void siftDown(int,java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void &lt;init&gt;(java.util.SortedSet)&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: int size()&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.PriorityQueue: void grow(int)&gt;"><flows><flow><from AccesPath="&lt;java.util.PriorityQueue: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.PriorityQueue: java.lang.Object[] queue&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method></methods>