<?xml version="1.0" ?><methods><method id="&lt;java.util.ArrayList: int size()&gt;"><flows><flow><from AccesPath="&lt;java.util.ArrayList: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.ArrayList: boolean batchRemove(java.util.Collection,boolean)&gt;"><flows><flow><from AccesPath="&lt;java.util.ArrayList: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.AbstractList: int modCount&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.ArrayList: java.lang.Object get(int)&gt;"><flows><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList: boolean retainAll(java.util.Collection)&gt;"><flows><flow><from AccesPath="&lt;java.util.ArrayList: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.AbstractList: int modCount&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.ArrayList: java.lang.String outOfBoundsMsg(int)&gt;"><flows><flow><from AccesPath="&lt;java.util.ArrayList: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.ArrayList: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList: void add(int,java.lang.Object)&gt;"><flows><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.ArrayList: java.lang.Object set(int,java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" ParameterIndex="1" sourceSinkType="Parameter" TaintSubField="true"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" ParameterIndex="1" sourceSinkType="Parameter" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" ParameterIndex="1" sourceSinkType="Parameter" TaintSubField="true"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" ParameterIndex="1" sourceSinkType="Parameter" TaintSubField="false"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" ParameterIndex="1" sourceSinkType="Parameter" TaintSubField="false"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" ParameterIndex="1" sourceSinkType="Parameter" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" ParameterIndex="1" sourceSinkType="Parameter" TaintSubField="true"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" ParameterIndex="1" sourceSinkType="Parameter" TaintSubField="true"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" ParameterIndex="1" sourceSinkType="Parameter" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList: java.lang.Object elementData(int)&gt;"><flows><flow><from AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" sourceSinkType="Return" TaintSubField="true"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList: java.util.ListIterator listIterator()&gt;"><flows><flow><from AccesPath="&lt;java.util.AbstractList: int modCount&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.ArrayList$Itr: int expectedModCount&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.ArrayList$Itr: java.util.ArrayList this$0&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.ArrayList$ListItr: java.util.ArrayList this$0&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.ArrayList: boolean removeAll(java.util.Collection)&gt;"><flows><flow><from AccesPath="&lt;java.util.ArrayList: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.AbstractList: int modCount&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.ArrayList: java.lang.Object remove(int)&gt;"><flows><flow><from AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.ArrayList: void rangeCheck(int)&gt;"><flows><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList: java.util.Iterator iterator()&gt;"><flows><flow><from AccesPath="&lt;java.util.AbstractList: int modCount&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.ArrayList$Itr: int expectedModCount&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.ArrayList$Itr: java.util.ArrayList this$0&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.ArrayList: java.lang.Object clone()&gt;"><flows><flow><from AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])&gt;"><flows><flow><from AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to ParameterIndex="0" sourceSinkType="Parameter" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList: java.lang.Object[] toArray()&gt;"><flows><flow><from AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.ArrayList: boolean add(java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" ParameterIndex="0" sourceSinkType="Parameter" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;&lt;java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList: void &lt;init&gt;(java.util.Collection)&gt;"><flows><flow><from AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.LinkedList: java.util.LinkedList$Node first&gt;&lt;java.util.LinkedList$Node: java.lang.Object item&gt;" ParameterIndex="0" sourceSinkType="Parameter" TaintSubField="true"></to></flow><flow><from AccesPath="&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.ArrayList: int size&gt;" FieldSig="(this)" sourceSinkType="Field" TaintSubField="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList: java.util.ListIterator listIterator(int)&gt;"><flows><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList$Itr: int cursor&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.ArrayList$ListItr: java.util.ArrayList this$0&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.ArrayList$Itr: java.util.ArrayList this$0&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from AccesPath="&lt;java.util.AbstractList: int modCount&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.ArrayList$Itr: int expectedModCount&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.ArrayList: int lastIndexOf(java.lang.Object)&gt;"><flows><flow><from AccesPath="&lt;java.util.ArrayList: int size&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method><method id="&lt;java.util.ArrayList: java.util.List subList(int,int)&gt;"><flows><flow><from AccesPath="&lt;java.util.AbstractList: int modCount&gt;" FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.AbstractList: int modCount&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList$SubList: int parentOffset&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList$SubList: int size&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterIndex="1" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList$SubList: int size&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from FieldSig="(this)" sourceSinkType="Field"></from><to AccesPath="&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow><flow><from ParameterIndex="0" sourceSinkType="Parameter"></from><to AccesPath="&lt;java.util.ArrayList$SubList: int offset&gt;" sourceSinkType="Return" TaintSubField="false"></to></flow></flows></method></methods>